events
{
    worker_connections 1024;
}

pid							/var/run/nginx.pid;

http
{
	error_log					/var/log/nginx/error.log notice;
	access_log 					/var/log/nginx/access.log;

	access_log one;
	upstream home
	{
		server	home:8001;
	}
	upstream backend_authapi
	{
		server	backend_authapi:8000;
	}
	upstream backend_sudoku
	{
		server	backend_sudoku:8005;
	}
	upstream pong
	{
		server	pong:8002;
	}

	server
	{
		listen 80;

		server_name localhost;

		return https://$server_name$request_uri;
	}
	
	server
	{
		listen 443 ssl;

		server_name localhost;

		ssl_certificate /etc/nginx/certs/nginx.crt;
		ssl_certificate_key /etc/nginx/certs/nginx.key;

        ssl_protocols TLSv1.2 TLSv1.3;
	
        if ($arg_request_by != "Home") {
			set $block_browsers 1;
        }

		# if ($http_requested_by != 'Home') {
        #     add_header X-	Request-By "Home";
		# }

		location /auth
		{
			include				/etc/nginx/mime.types;
			if ($block_browsers) {
				return 302 https://$host:8083/;
			}

			proxy_pass			http://backend_authapi;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /sudokubattle
		{
			if ($block_browsers) {
				return 302 https://$host:8083/;
			}
			include				/etc/nginx/mime.types;
			proxy_pass			http://backend_sudoku;
			proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

		}
		location /ws/sudokubattle
		{
			if ($block_browsers) {
				return 302 https://$host:8083/;
			}
			include				/etc/nginx/mime.types;
			proxy_pass						http://backend_sudoku;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

		}
		location /
		{

			include				/etc/nginx/mime.types;
			proxy_pass						http://home;
			proxy_set_header	Host $host;
            proxy_set_header	X-Real-IP $remote_addr;
            proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header	X-Forwarded-Proto $scheme;
		}

		location /pong
		{
			include				/etc/nginx/mime.types;
			proxy_pass			http://pong;
			proxy_set_header	Host $host;
            proxy_set_header	X-Real-IP $remote_addr;
            proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header	X-Forwarded-Proto $scheme;

		}
		location /api_pong
		{
			include				/etc/nginx/mime.types;
			proxy_pass			http://pong;
			proxy_set_header	Host $host;
            proxy_set_header	X-Real-IP $remote_addr;
            proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header	X-Forwarded-Proto $scheme;

		}

		location /ws/pong
		{
			include				/etc/nginx/mime.types;
			proxy_pass			http://pong;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
			proxy_set_header	Host $host;
            proxy_set_header	X-Real-IP $remote_addr;
            proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header	X-Forwarded-Proto $scheme;

		}

	}
}
